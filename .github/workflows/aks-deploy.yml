name: Deploy to AKS Serverless

on:
  push:
    branches:
      - aksremote

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to ACR
      run: |
        USERNAME=$(az acr credential show -n ${{ secrets.REGISTRY_NAME }} --query username -o tsv)
        PASSWORD=$(az acr credential show -n ${{ secrets.REGISTRY_NAME }} --query passwords[0].value -o tsv)
        docker login ${{ secrets.REGISTRY_NAME }}.azurecr.io -u "$USERNAME" -p "$PASSWORD"

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.REGISTRY_NAME }}.azurecr.io/react-app:${{ github.sha }} .
        docker push ${{ secrets.REGISTRY_NAME }}.azurecr.io/react-app:${{ github.sha }}

    - name: Deploy to AKS
      run: |
        # Retrieve AKS credentials
        az aks get-credentials \
          --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} \
          --name ${{ secrets.AKS_CLUSTER_NAME }} \
          --overwrite-existing
        
        # Create deployment if not exists
        if ! kubectl get deployment react-app -n default; then
          kubectl create deployment react-app \
            --image=${{ secrets.REGISTRY_NAME }}.azurecr.io/react-app:${{ github.sha }} \
            --replicas=3 \
            -n default
        fi
        
        # Update deployment
        kubectl set image deployment/react-app \
          react-app=${{ secrets.REGISTRY_NAME }}.azurecr.io/react-app:${{ github.sha }} \
          -n default
        
        # Verify deployment
        kubectl rollout status deployment/react-app -n default