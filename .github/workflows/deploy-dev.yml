name: AKS Remote - Build & Deploy to Production

on:
  push:
    branches: [aksremote]
    paths:
      - '**'  # Consider adding specific paths that should trigger deployment

permissions:
  id-token: write  # Required for OIDC authentication
  contents: read   # Required for actions/checkout

jobs:
  deploy-to-production:
    name: Build and Deploy to Production VM
    runs-on: ubuntu-latest
    environment: production  # Consider adding environment protection rules
    timeout-minutes: 15      # Prevent hanging deployments

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Get full git history if needed for versioning

      - name: Setup SSH Authentication
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          # Add GitHub to known_hosts to prevent warnings
          ssh-keyscan -H 52.226.18.83 >> ~/.ssh/known_hosts

      - name: Validate SSH Connection
        run: ssh -i ~/.ssh/id_rsa azureuser@52.226.18.83 "echo '✅ Verified SSH access to production VM'"

      - name: Deploy Application via SSH
        run: |
          ssh -i ~/.ssh/id_rsa azureuser@52.226.18.83 << 'DEPLOY_SCRIPT'
          set -e  # Exit immediately on error
          set -o pipefail  # Capture pipeline errors
          
          echo "🚀 Starting production deployment..."
          cd /home/azureuser/app || exit 1
          
          # Clean up previous deployment
          sudo docker stop my-app-container || true
          sudo docker rm my-app-container || true
          
          # Build new image with timestamp for traceability
          BUILD_DATE=$(date +%Y-%m-%dT%H:%M:%S%z)
          sudo docker build -t my-app:latest -t my-app:$BUILD_DATE .
          
          # Run container with health check and restart policy
          sudo docker run -d \
            --name my-app-container \
            -p 80:80 \
            --restart unless-stopped \
            --health-cmd="curl -f http://localhost/ || exit 1" \
            my-app:latest
          
          echo "🛡️ Running containers:"
          sudo docker ps --format "table {{.ID}}\t{{.Names}}\t{{.Status}}\t{{.Ports}}"
          
          echo "✅ Successfully deployed application"
          DEPLOY_SCRIPT

      - name: Verify Deployment
        run: |
          curl --retry 3 --retry-delay 5 --fail http://52.226.18.83/healthz || \
          (echo "❌ Deployment verification failed" && exit 1)
        if: always()  # Always run this step for deployment verification