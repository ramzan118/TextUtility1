name: AKS Remote - Production Deployment Pipeline

on:
  push:
    branches: [aksremote]

permissions:
  id-token: write
  contents: read

jobs:
  deploy-to-production:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 20

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure SSH Access
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 52.226.18.83 >> ~/.ssh/known_hosts

      - name: Validate SSH Connection
        run: |
          ssh -i ~/.ssh/id_rsa azureuser@52.226.18.83 "echo 'ðŸŸ¢ SSH connection successful'"
          echo "âœ… SSH connection verified"

      - name: Deploy Application
        run: |
          ssh -i ~/.ssh/id_rsa azureuser@52.226.18.83 << 'EOF'
          set -euxo pipefail
          cd /home/azureuser/app

          # Cleanup previous deployment
          sudo docker stop my-app-container || true
          sudo docker rm my-app-container || true

          # Build and run
          sudo docker build -t my-app:latest .
          sudo docker run -d \
            --name my-app-container \
            -p 80:80 \
            --restart unless-stopped \
            my-app:latest

          # Verify container started
          sleep 5
          sudo docker ps -a | grep my-app-container
          sudo docker logs my-app-container
          EOF

      - name: Verify Deployment
        run: |
          echo "Waiting 20 seconds for app to start..."
          sleep 20

          # First check if container is running remotely
          ssh -i ~/.ssh/id_rsa azureuser@52.226.18.83 \
            "sudo docker inspect -f '{{.State.Status}}' my-app-container"

          # Then check application health
          if ! curl --retry 5 --retry-delay 3 --fail http://52.226.18.83/; then
            echo "::error:: Application health check failed"
            echo "Fetching container logs..."
            ssh -i ~/.ssh/id_rsa azureuser@52.226.18.83 \
              "sudo docker logs my-app-container"
            exit 1
          fi
