name: AKS Remote - Production Deployment Pipeline

on:
  push:
    branches: [aksremote]

permissions:
  id-token: write
  contents: read

jobs:
  deploy-to-production:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 20

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure SSH Access
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          cat <<EOF > ~/.ssh/id_rsa
          ${{ secrets.SSH_PRIVATE_KEY }}
          EOF
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 52.226.18.83 >> ~/.ssh/known_hosts

      - name: Validate SSH Connection
        run: |
          if ssh -i ~/.ssh/id_rsa azureuser@52.226.18.83 "echo 'ðŸŸ¢ SSH connection successful'"; then
            echo "SSH connection verified"
          else
            echo "::error::SSH connection failed"
            exit 1
          fi

      - name: Deploy Application
        run: |
          ssh -i ~/.ssh/id_rsa azureuser@52.226.18.83 << 'DEPLOY_SCRIPT'
          set -euo pipefail
          
          echo "=== Starting Deployment ==="
          cd /home/azureuser/app || exit 1
          
          # Stop and remove existing container
          sudo docker stop my-app-container || true
          sudo docker rm my-app-container || true
          
          # Build new image
          sudo docker build -t my-app:latest .
          
          # Run container with proper port mapping
          sudo docker run -d \
            --name my-app-container \
            -p 80:80 \
            --restart unless-stopped \
            my-app:latest
          
          echo "=== Deployment Complete ==="
          sudo docker ps
          DEPLOY_SCRIPT

      - name: Verify Deployment
        run: |
          echo "Waiting for application to start..."
          sleep 20
          
          if ! curl --retry 5 --retry-delay 5 --fail http://52.226.18.83/; then
            echo "::error::Application failed to start"
            echo "Checking container logs..."
            ssh -i ~/.ssh/id_rsa azureuser@52.226.18.83 "sudo docker logs my-app-container"
            exit 1
          else
            echo "::notice::Application is running successfully"
          fi