name: AKS Remote - Docker Build & Deployment Pipeline

on:
  push:
    branches: [aksremote]
    paths:
      - '**'  # Triggers on all file changes (consider narrowing if needed)

permissions:
  id-token: write
  contents: read

jobs:
  docker-build-deploy:
    name: Docker Build and Deployment
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: http://52.226.18.83  # Adds environment URL in GitHub UI
    timeout-minutes: 15

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure SSH Access
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H 52.226.18.83 >> ~/.ssh/known_hosts
          echo "SSH configuration complete"

      - name: Test Remote Connectivity
        run: |
          if ! ssh -i ~/.ssh/id_rsa azureuser@52.226.18.83 "echo 'ðŸŸ¢ SSH connection successful'"; then
            echo "ðŸ”´ SSH connection failed"
            exit 1
          fi

      - name: Execute Remote Deployment
        run: |
          ssh -i ~/.ssh/id_rsa azureuser@52.226.18.83 << 'EOF'
          set -euo pipefail
          
          echo "=== Starting Deployment Process ==="
          cd /home/azureuser/app || { echo "Directory not found"; exit 1; }
          
          # Container lifecycle management
          echo "Stopping existing containers..."
          sudo docker stop my-app-container || true
          sudo docker rm my-app-container || true
          
          # Build with version tracking
          echo "Building new Docker image..."
          BUILD_SHA=$(git rev-parse --short HEAD)
          sudo docker build -t my-app:latest -t my-app:$BUILD_SHA .
          
          # Deployment
          echo "Launching container..."
          sudo docker run -d \
            --name my-app-container \
            -p 80:80 \
            --restart unless-stopped \
            -e NODE_ENV=production \
            my-app:latest
          
          echo "=== Deployment Summary ==="
          echo "Image Versions:"
          sudo docker images my-app --format "table {{.Tag}}\t{{.CreatedAt}}"
          echo "Running Containers:"
          sudo docker ps --format "table {{.ID}}\t{{.Names}}\t{{.Status}}"
          EOF

      - name: Health Check Verification
        run: |
          echo "Waiting 10 seconds for app to initialize..."
          sleep 10
          
          if ! curl --retry 3 --retry-delay 5 --fail http://52.226.18.83/; then
            echo "ðŸ”´ Initial health check failed - checking container logs..."
            ssh -i ~/.ssh/id_rsa azureuser@52.226.18.83 "sudo docker logs my-app-container"
            exit 1
          else
            echo "ðŸŸ¢ Application is responding"
          fi